{"Includes": ["#include <stdio.h>\n", "#include <stdint.h>\n", "#include <stdlib.h> /* calloc() */\n", "#include <string.h> /* strdup() */\n"], "Defines": ["#define OPL_EMU_REGISTERS_RHYTHM_CHANNEL 0xff\n", "#define OPL_EMU_REGISTERS_WAVEFORMS 8\n", "#define OPL_EMU_REGISTERS_REGISTERS 0x200\n", "#define OPL_EMU_REGISTERS_REG_MODE 0x04\n", "#define OPL_EMU_REGISTERS_WAVEFORM_LENGTH 0x400\n"], "TypeDefs": [], "Globals": [], "Structs": ["struct opl_emu_registers\n{\n\t// internal state\n\tuint16_t m_lfo_am_counter;            // LFO AM counter\n\tuint16_t m_lfo_pm_counter;            // LFO PM counter\n\tuint32_t m_noise_lfsr;                // noise LFSR state\n\tuint8_t m_lfo_am;                     // current LFO AM value\n\tuint8_t m_regdata[OPL_EMU_REGISTERS_REGISTERS];         // register data\n\tuint16_t m_waveform[OPL_EMU_REGISTERS_WAVEFORMS][OPL_EMU_REGISTERS_WAVEFORM_LENGTH]; // waveforms\n};"], "Function Declarations": ["uint32_t opl_emu_bitfield(uint32_t value, int start, int length )\n;", "int opl_emu_registers_write(struct opl_emu_registers* regs,uint16_t index, uint8_t data, uint32_t *channel, uint32_t *opmask)\n;"], "Function Implementations": ["uint32_t opl_emu_bitfield(uint32_t value, int start, int length )\n{\n\treturn (value >> start) & ((1 << length) - 1);\n}", "int opl_emu_registers_write(struct opl_emu_registers* regs,uint16_t index, uint8_t data, uint32_t *channel, uint32_t *opmask)\n{\n\t// writes to the mode register with high bit set ignore the low bits\n\tif (index == OPL_EMU_REGISTERS_REG_MODE && opl_emu_bitfield(data, 7,1) != 0)\n\t\tregs->m_regdata[index] |= 0x80;\n\telse\n\t\tregs->m_regdata[index] = data;\n\n\t// handle writes to the rhythm keyons\n\tif (index == 0xbd)\n\t{\n\t\t*channel = OPL_EMU_REGISTERS_RHYTHM_CHANNEL;\n\t\t*opmask = opl_emu_bitfield(data, 5,1) ? opl_emu_bitfield(data, 0, 5) : 0;\n\t\treturn 1;\n\t}\n\n\t// handle writes to the channel keyons\n\tif ((index & 0xf0) == 0xb0)\n\t{\n\t\t*channel = index & 0x0f;\n\t\tif (*channel < 9)\n\t\t{\n            *channel += 9 * opl_emu_bitfield(index, 8,1);\n\t\t\t*opmask = opl_emu_bitfield(data, 5,1) ? 15 : 0;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}"], "Enums": []}